<?php

/**
* Implements hook_menu().
*/

function tripal_bipaa_ui_menu() {
    $items = array();

    $items['heatmap'] = array(
        'page callback' => 'render_expression_blocks',
        'access arguments' => array('access content'),
        'type' => MENU_CALLBACK,
     );

    $items['analysis-expression/heatmap/search'] = [
    'title' => '',
    'access arguments' => ['access content'],
    'page callback' => 'tripal_analysis_expression_search_features_callback',
    'type' => MENU_CALLBACK,
    ];

    return $items;
}

function render_expression_blocks() {
    $blockObjectInput = block_load('tripal_analysis_expression', 'input_features');
    $blockObjectView = block_load('tripal_analysis_expression', 'heatmap_features');
    $block = _block_get_renderable_array(_block_render_blocks(array($blockObjectInput, $blockObjectView)));
    $output = drupal_render($block);
    return $output;
}

function tripal_bipaa_ui_form_alter(&$form, &$form_state, $form_id){
    switch ($form_id){
        case 'feature_heatmap_form':
            // Might be better to fill it with proper value, but it would make sql database calls..
            unset($form['example_button']);
            unset($form['heatmap_feature_uniquename']['#attributes']['placeholder']);
            unset($form['heatmap_feature_uniquename']['#description']);
    };
}

function tripal_bipaa_ui_js_alter(&$javascript){

    $scripts = array(
        'plotly-latest.min.js' => 'plotly-latest.min.js'
    );

    $old_script_path = drupal_get_path('module', 'tripal_analysis_expression') . '/theme/js/';
    $new_script_path = drupal_get_path('module', 'tripal_bipaa_ui') . '/js/';

    foreach($scripts as $key => $value){
        if(isset($javascript[$old_script_path . $key])){
            $javascript[$old_script_path . $key]['data'] = $new_script_path . $value;
        };
    }
};
